#2=MCI****
#3=Dementia****
#4=Other Cognition
#5=Abnormal Cognition****
#7=Dont Know
#8=Refuse to answer
#9=Not Appicable
reduced <- reduced %>% mutate(cdx_cog=recode(cdx_cog,
`0`=0,
`1`=1,
`2`=1,
`3`=1,
`4`=1,
`5`=0))
# recode hispanic variable
reduced <- reduced %>% mutate(ID_Hispanic=recode(ID_Hispanic,
`1`=0,
`2`=1,
`3`=1,
`4`=1,
`5`=1))
# test / train data set split
train <- reduced[1:200,]
test <- reduced[201:401,]
train$cdx_cog<-as.numeric(train$cdx_cog)
full.model <- lm(cdx_cog ~., data = train)
summary(full.model)
step(lm(cdx_cog ~., data = train),direction="both")
# stepwise recommended model - R2 = 0.5666
model.stepwise <- lm(formula = cdx_cog ~ ID_Race_Black + ID_Residence + ID_USlive +
ID_Income + ID_Retire + OM_Pulse1 + OM_Pulse2 + OM_Height +
OM_Weight + OM_BMI + IMH_Alzheimers + IMH_Dementia + IMH_HeartDisease +
IMH_Stroke + IMH_OtherMentalHealth + TrailsA_sscore + TrailsB_sscore +
LM1_AB_sscore + LM2_AB_sscore + mmse_t_w + bw_choltotal +
bw_HDLchol + bw_triglycerides + bw_LDLchol + bw_glucose +
bw_chloride + bw_calcium + bw_protein + bw_Bilirubin + bw_ALKA +
bw_WBC + bw_RBC + bw_hematocrit + bw_MCV + bw_RDW + bw_platelet +
bw_ABneutro + bw_ABlymph + bw_lymphocytes + cdx_hypertension +
cdx_hypothyroid + bw_MCH,
data = train)
summary(model.stepwise)
x=model.matrix(cdx_cog~.,train)[,-1]
y=(train$cdx_cog)
xtest<-model.matrix(cdx_cog~.,test)[,-1]
ytest<-test$cdx_cog
# Plot LASSO model
grid=10^seq(10,-2, length =608)
lasso.mod=glmnet(x,y,alpha=1, lambda =grid)
par(mfrow=c(1,1))
cv.out=cv.glmnet(x,y,alpha=1) #alpha=1 performs LASSO
plot(cv.out)
bestlambda<-cv.out$lambda.min  #Optimal penalty parameter.  You can make this call visually.
lasso.pred=predict (lasso.mod ,s=bestlambda ,newx=xtest)
# identify they variables selected by LASSO
coef(lasso.mod,s=bestlambda)
x=model.matrix(cdx_cog~.,train)[,-1]
y=(train$cdx_cog)
xtest<-model.matrix(cdx_cog~.,test)[,-1]
ytest<-test$cdx_cog
grid=10^seq(10,-2, length =608)
lasso.mod=glmnet(x,y,alpha=1, lambda =grid)
par(mfrow=c(1,1))
cv.out=cv.glmnet(x,y,alpha=1) #alpha=1 performs LASSO
plot(cv.out)
bestlambda<-cv.out$lambda.min  #Optimal penalty parameter.  You can make this call visually.
lasso.pred=predict (lasso.mod ,s=bestlambda ,newx=xtest)
x=model.matrix(cdx_cog~.,train)[,-1]
y=(train$cdx_cog)
xtest<-model.matrix(cdx_cog~.,test)[,-1]
ytest<-test$cdx_cog
grid=10^seq(10,-2, length =608)
lasso.mod=glmnet(x,y,alpha=1, lambda =grid)
library(glmnet)
lasso.mod=glmnet(x,y,alpha=1, lambda =grid)
par(mfrow=c(1,1))
cv.out=cv.glmnet(x,y,alpha=1) #alpha=1 performs LASSO
plot(cv.out)
bestlambda<-cv.out$lambda.min  #Optimal penalty parameter.  You can make this call visually.
lasso.pred=predict (lasso.mod ,s=bestlambda ,newx=xtest)
coef(lasso.mod,s=bestlambda)
train[, 'cdx_cog'] <- as.factor(train[, 'cdx_cog'])
test[, 'cdx_cog'] <- as.factor(test[, 'cdx_cog'])
model.manual <- glm(cdx_cog ~ Age + ID_Gender + ID_USlive + OM_BMI + IMH_Stroke + TrailsA_sscore + LM1_AB_sscore + LM2_AB_sscore
+ mmse_t_w + bw_hemoglobin + bw_ABneutro + bw_ABmono + bw_lymphocytes
,family=binomial(link='logit'),data=train)
summary(model.manual)
exp(cbind("Odds ratio" = coef(model.manual), confint.default(model.manual, level = 0.95)))
setwd("F:/SMU/DS6372/Project 2/STATS_6372_Project2/EDA")
medData <- read.csv(file="data_cut.csv", header=TRUE, sep=',', na.strings=c("", "NA"))
minus_cols<-c(1,7:17,22:24,29:34,36:38,41,43,45,47,48,49,51,53,55,57,59,61,63,64,65,66,68,70,72,74,76,78,80:82,84,85,87,88,90:92,95,99,100,104,105,114,122,123,125,126,135:139,143:155,157:161)
medData[,-minus_cols]->medData
# replace all NA values with 0; should we get rid of NAs instead?
medData <- na.omit(medData)
# remove factor columns that are practically not useful or Null
# reduced <- select (medData2,-c(TrailsBtime, TrailsBerrors, LM1_B2_total, TrailsAerrors, TrailsAtime
# , LM1_AB_total, LM2_Btotal, LM2_AB_total, LM2_Atotal, cdx_hypertension))
# recode cognitive variable
######
#levels of lgr_eda2$cdx_cog
######
#0=normal*****
#1=Subjective Memory Complaint(SMC)****
#2=MCI****
#3=Dementia****
#4=Other Cognition
#5=Abnormal Cognition****
#7=Dont Know
#8=Refuse to answer
#9=Not Appicable
reduced <- reduced %>% mutate(cdx_cog=recode(cdx_cog,
`0`=0,
`1`=1,
`2`=1,
`3`=1,
`4`=1,
`5`=0))
# recode hispanic variable
reduced <- reduced %>% mutate(ID_Hispanic=recode(ID_Hispanic,
`1`=0,
`2`=1,
`3`=1,
`4`=1,
`5`=1))
train <- reduced[1:200,]
test <- reduced[201:401,]
train$cdx_cog<-as.numeric(train$cdx_cog)
full.model <- lm(cdx_cog ~., data = train)
summary(full.model)
step(lm(cdx_cog ~., data = train),direction="both")
model.stepwise <- lm(formula = cdx_cog ~ ID_Race_Black + ID_Race_Other + ID_Residence +
ID_USlive + ID_Education + ID_Retire + OM_Pulse1 + OM_Pulse2 +
OM_Height + OM_Weight + OM_BMI + IMH_HighBP + IMH_Alzheimers +
IMH_HeartDisease + IMH_KidneyDisease + IMH_Stroke + IMH_OtherMentalHealth +
IMH_Arthritis + TrailsA_sscore + TrailsB_sscore + LM2_AB_sscore +
mmse_t_w + bw_choltotal + bw_HDLchol + bw_triglycerides +
bw_LDLchol + bw_glucose + bw_chloride + bw_calcium + bw_protein +
bw_Bilirubin + bw_ALKA + bw_WBC + bw_RBC + bw_hematocrit +
bw_MCV + bw_platelet + bw_ABneutro + bw_ABlymph + bw_ABeosin +
bw_neutrophils + bw_lymphocytes + bw_eosinophils + bw_vitaminb12 +
cdx_hypothyroid + cdx_alcohol + cdx_tobacco, data = train)
summary(model.stepwise)
x=model.matrix(cdx_cog~.,train)[,-1]
y=(train$cdx_cog)
xtest<-model.matrix(cdx_cog~.,test)[,-1]
ytest<-test$cdx_cog
grid=10^seq(10,-2, length =608)
lasso.mod=glmnet(x,y,alpha=1, lambda =grid)
par(mfrow=c(1,1))
cv.out=cv.glmnet(x,y,alpha=1) #alpha=1 performs LASSO
plot(cv.out)
bestlambda<-cv.out$lambda.min  #Optimal penalty parameter.  You can make this call visually.
lasso.pred=predict (lasso.mod ,s=bestlambda ,newx=xtest)
coef(lasso.mod,s=bestlambda)
model.manual <- glm(cdx_cog ~ Age + ID_Gender + ID_USlive + OM_BMI + IMH_Stroke + TrailsA_sscore + LM1_AB_sscore + LM2_AB_sscore
+ mmse_t_w + bw_hemoglobin + bw_ABneutro + bw_ABmono + bw_lymphocytes + IMH_HighBP
,family=binomial(link='logit'),data=train)
summary(model.manual)
exp(cbind("Odds ratio" = coef(model.manual), confint.default(model.manual, level = 0.95)))
medData
setwd("F:/SMU/DS6372/Project 2/STATS_6372_Project2/EDA")
medData <- read.csv(file="data_cut.csv", header=TRUE, sep=',', na.strings=c("", "NA"))
minus_cols<-c(1,7:17,22:24,29:34,36:38,41,43,45,47,48,49,51,53,55,57,59,61,63,64,65,66,68,70,72,74,76,78,80:82,84,85,87,88,90:92,95,99,100,104,105,114,122,123,125,126,135:139,143:155,157:161)
medData[,-minus_cols]->medData
# replace all NA values with 0; should we get rid of NAs instead?
medData <- na.omit(medData)
reduced <- medData %>% mutate(cdx_cog=recode(cdx_cog,
`0`=0,
`1`=1,
`2`=1,
`3`=1,
`4`=1,
`5`=0))
# recode hispanic variable
reduced <- medData %>% mutate(ID_Hispanic=recode(ID_Hispanic,
`1`=0,
`2`=1,
`3`=1,
`4`=1,
`5`=1))
train <- reduced[1:200,]
test <- reduced[201:401,]
train$cdx_cog<-as.numeric(train$cdx_cog)
full.model <- lm(cdx_cog ~., data = train)
summary(full.model)
step(lm(cdx_cog ~., data = train),direction="both")
summary(model.stepwise)
x=model.matrix(cdx_cog~.,train)[,-1]
y=(train$cdx_cog)
xtest<-model.matrix(cdx_cog~.,test)[,-1]
ytest<-test$cdx_cog
grid=10^seq(10,-2, length =608)
lasso.mod=glmnet(x,y,alpha=1, lambda =grid)
par(mfrow=c(1,1))
cv.out=cv.glmnet(x,y,alpha=1) #alpha=1 performs LASSO
plot(cv.out)
bestlambda<-cv.out$lambda.min  #Optimal penalty parameter.  You can make this call visually.
lasso.pred=predict (lasso.mod ,s=bestlambda ,newx=xtest)
coef(lasso.mod,s=bestlambda)
coef(lasso.mod,s=bestlambda)
model.manual <- glm(cdx_cog ~ Age + ID_Gender + ID_USlive + OM_BMI + IMH_Stroke + TrailsA_sscore + LM1_AB_sscore + LM2_AB_sscore
+ mmse_t_w + bw_hemoglobin + bw_ABneutro + bw_ABmono + bw_lymphocytes + IMH_HeartDisease + IMH_HighBP + ID_Education
+ ID_Race_White
,family=binomial(link='logit'),data=train)
summary(model.manual)
# Using the summary coefficients we can generate CI for each one in the table and get odds ratios - manual model
exp(cbind("Odds ratio" = coef(model.manual), confint.default(model.manual, level = 0.95)))
model.manual <- glm(cdx_cog ~ Age + ID_Gender + ID_USlive + OM_BMI + IMH_Stroke + TrailsA_sscore + LM1_AB_sscore + LM2_AB_sscore
+ mmse_t_w + bw_hemoglobin + bw_ABneutro + bw_ABmono + bw_lymphocytes + IMH_HeartDisease + IMH_HighBP + ID_Education
+ ID_Race_White
,family=binomial(link='logit'),data=train)
model.manual <- glm(cdx_cog ~ Age + ID_Gender + ID_USlive + OM_BMI + IMH_Stroke + TrailsA_sscore + LM1_AB_sscore + LM2_AB_sscore
+ mmse_t_w + bw_hemoglobin + bw_ABneutro + bw_ABmono + bw_lymphocytes + IMH_HeartDisease + IMH_HighBP + ID_Education
+ ID_Race_White
,family=binomial(link='logit'),data=train)
summary(model.manual)
model.manual <- glm(cdx_cog ~ Age + ID_Gender + ID_USlive + OM_BMI + IMH_Stroke + TrailsA_sscore + LM1_AB_sscore + LM2_AB_sscore
+ mmse_t_w + bw_hemoglobin + bw_ABneutro + bw_ABmono + bw_lymphocytes + IMH_HeartDisease + IMH_HighBP + ID_Education
+ ID_Race_White
,family=binomial(link='logit'),data=train)
train
model.manual <- glm(cdx_cog ~ Age + ID_Gender + ID_USlive + OM_BMI + IMH_Stroke + TrailsA_sscore + LM1_AB_sscore + LM2_AB_sscore
+ mmse_t_w + bw_hemoglobin + bw_ABneutro + bw_ABmono + IMH_HeartDisease + IMH_HighBP + ID_Education
+ ID_Race_White
,family=binomial(link='logit'),data=train)
model.manual <- glm(cdx_cog ~ Age + ID_Gender + ID_USlive + OM_BMI + IMH_Stroke + TrailsA_sscore + LM1_AB_sscore + LM2_AB_sscore
+ mmse_t_w + bw_hemoglobin + bw_ABneutro + bw_ABmono + IMH_HeartDisease + IMH_HighBP
+ ID_Race_White
,family=binomial(link='logit'),data=train)
model.manual <- glm(cdx_cog ~ Age + ID_Gender + ID_USlive + OM_BMI + IMH_Stroke + TrailsA_sscore + LM1_AB_sscore + LM2_AB_sscore
+ mmse_t_w + bw_hemoglobin + bw_ABneutro + bw_ABmono + IMH_HeartDisease + IMH_HighBP + ID_Education
+ ID_Race_White,family=binomial(link='logit'),data=train)
train
reduced <- medData %>% mutate(cdx_cog=recode(cdx_cog,
`0`=0,
`1`=1,
`2`=1,
`3`=1,
`4`=1,
`5`=0))
train <- reduced[1:200,]
test <- reduced[201:401,]
train
model.manual <- glm(cdx_cog ~ Age + ID_Gender + ID_USlive + OM_BMI + IMH_Stroke + TrailsA_sscore + LM1_AB_sscore + LM2_AB_sscore
+ mmse_t_w + bw_hemoglobin + bw_ABneutro + bw_ABmono + IMH_HeartDisease + IMH_HighBP + ID_Education
+ ID_Race_White,family=binomial(link='logit'),data=train)
model.manual <- glm(cdx_cog ~ Age + ID_Gender + ID_USlive + OM_BMI + IMH_Stroke + TrailsA_sscore + LM1_AB_sscore + LM2_AB_sscore
+ mmse_t_w + bw_hemoglobin + bw_ABneutro + bw_ABmono + bw_lymphocytes + IMH_HeartDisease + IMH_HighBP + ID_Education
+ ID_Race_White
,family=binomial(link='logit'),data=train)
summary(model.manual)
model.manual <- glm(cdx_cog ~ Age + ID_Gender + ID_USlive + OM_BMI + IMH_Stroke + TrailsA_sscore + LM1_AB_sscore + LM2_AB_sscore
+ mmse_t_w + bw_hemoglobin + bw_ABneutro + bw_ABmono + bw_lymphocytes + IMH_HeartDisease + IMH_HighBP + ID_Education
+ ID_Race_White
,family=binomial(link='logit'),data=train)
coef(lasso.mod,s=bestlambda)
setwd("F:/SMU/DS6372/Project 2/STATS_6372_Project2/EDA")
medData <- read.csv(file="data_cut.csv", header=TRUE, sep=',', na.strings=c("", "NA"))
minus_cols<-c(1,7:17,22:24,29:34,36:38,41,43,45,47,48,49,51,53,55,57,59,61,63,64,65,66,68,70,72,74,76,78,80:82,84,85,87,88,90:92,95,99,100,104,105,114,122,123,125,126,136:140,143:155,157:161)
medData[,-minus_cols]->medData
# replace all NA values with 0; should we get rid of NAs instead?
medData <- na.omit(medData)
reduced <- medData %>% mutate(cdx_cog=recode(cdx_cog,
`0`=0,
`1`=1,
`2`=1,
`3`=1,
`4`=1,
`5`=0))
reduced <- reduced %>% mutate(ID_Hispanic=recode(ID_Hispanic,
`1`=0,
`2`=1,
`3`=1,
`4`=1,
`5`=1))
reduced
train <- reduced[1:200,]
test <- reduced[201:401,]
train$cdx_cog<-as.numeric(train$cdx_cog)
full.model <- lm(cdx_cog ~., data = train)
summary(full.model)
step(lm(cdx_cog ~., data = train),direction="both")
model.stepwise <- lm(formula = cdx_cog ~ Age + ID_Race_White + ID_Residence + ID_Education +
ID_Retire + OM_BMI + IMH_HighBP + IMH_HeartDisease + IMH_ThyroidDisease +
TrailsA_sscore + LM2_AB_sscore + mmse_t_w + bw_AST + bw_ALT +
bw_hemoglobin + bw_ABlymph + bw_ABmono, data = train)
summary(model.stepwise)
x=model.matrix(cdx_cog~.,train)[,-1]
y=(train$cdx_cog)
xtest<-model.matrix(cdx_cog~.,test)[,-1]
ytest<-test$cdx_cog
grid=10^seq(10,-2, length =608)
lasso.mod=glmnet(x,y,alpha=1, lambda =grid)
par(mfrow=c(1,1))
cv.out=cv.glmnet(x,y,alpha=1) #alpha=1 performs LASSO
plot(cv.out)
bestlambda<-cv.out$lambda.min  #Optimal penalty parameter.  You can make this call visually.
lasso.pred=predict (lasso.mod ,s=bestlambda ,newx=xtest)
coef(lasso.mod,s=bestlambda)
odel.manual <- glm(cdx_cog ~ Age + ID_Gender + ID_USlive + OM_BMI + IMH_Stroke + TrailsA_sscore + LM1_AB_sscore + LM2_AB_sscore
+ mmse_t_w + bw_hemoglobin + bw_ABneutro + bw_ABmono + IMH_HighBP + ID_Education
+ ID_Race_White
,family=binomial(link='logit'),data=train)
summary(model.manual)
exp(cbind("Odds ratio" = coef(model.manual), confint.default(model.manual, level = 0.95)))
model.manual <- glm(cdx_cog ~ Age + ID_Gender + ID_USlive + OM_BMI + IMH_Stroke + TrailsA_sscore + LM1_AB_sscore + LM2_AB_sscore
+ mmse_t_w + bw_hemoglobin + bw_ABneutro + bw_ABmono + IMH_HighBP + ID_Education
+ ID_Race_White
,family=binomial(link='logit'),data=train)
exp(cbind("Odds ratio" = coef(model.manual), confint.default(model.manual, level = 0.95)))
setwd("F:/SMU/DS6372/Project 2/STATS_6372_Project2/EDA")
medData <- read.csv(file="data_cut.csv", header=TRUE, sep=',', na.strings=c("", "NA"))
minus_cols<-c(1,7:17,22:24,29:34,36:38,41,43,45,47,48,49,51,53,55,57,59,61,63,64,65,66,68,70,72,74,76,78,80:82,84,85,87,88,90:92,95,99,100,104,105,114,122,123,125,126,136:140,143:151,157:161)
medData[,-minus_cols]->medData
# replace all NA values with 0; should we get rid of NAs instead?
medData <- na.omit(medData)
# recode cognitive variable
######
#levels of lgr_eda2$cdx_cog
######
#0=normal*****
#1=Subjective Memory Complaint(SMC)****
#2=MCI****
#3=Dementia****
#4=Other Cognition
#5=Abnormal Cognition****
#7=Dont Know
#8=Refuse to answer
#9=Not Appicable
reduced <- medData %>% mutate(cdx_cog=recode(cdx_cog,
`0`=0,
`1`=1,
`2`=1,
`3`=1,
`4`=1,
`5`=0))
# recode hispanic variable
reduced <- reduced %>% mutate(ID_Hispanic=recode(ID_Hispanic,
`1`=0,
`2`=1,
`3`=1,
`4`=1,
`5`=1))
train <- reduced[1:200,]
test <- reduced[201:401,]
train$cdx_cog<-as.numeric(train$cdx_cog)
full.model <- lm(cdx_cog ~., data = train)
summary(full.model)
step(lm(cdx_cog ~., data = train),direction="both")
model.stepwise <- lm(formula = cdx_cog ~ Age + ID_Race_White + ID_Residence + ID_Education +
ID_Retire + OM_BMI + IMH_HighBP + IMH_HeartDisease + IMH_ThyroidDisease +
TrailsA_sscore + LM2_AB_sscore + mmse_t_w + bw_hemoglobin +
bw_ABlymph + bw_ABmono, data = train)
summary(model.stepwise)
x=model.matrix(cdx_cog~.,train)[,-1]
y=(train$cdx_cog)
xtest<-model.matrix(cdx_cog~.,test)[,-1]
ytest<-test$cdx_cog
# Plot LASSO model
grid=10^seq(10,-2, length =608)
lasso.mod=glmnet(x,y,alpha=1, lambda =grid)
par(mfrow=c(1,1))
cv.out=cv.glmnet(x,y,alpha=1) #alpha=1 performs LASSO
plot(cv.out)
bestlambda<-cv.out$lambda.min  #Optimal penalty parameter.  You can make this call visually.
lasso.pred=predict (lasso.mod ,s=bestlambda ,newx=xtest)
coef(lasso.mod,s=bestlambda)
model.manual <- glm(cdx_cog ~ Age + ID_Gender + ID_USlive + OM_BMI + IMH_Stroke + TrailsA_sscore + LM1_AB_sscore + LM2_AB_sscore
+ mmse_t_w + bw_hemoglobin + + IMH_ThyroidDisease + bw_ABneutro + bw_ABmono + bw_ABlymph + IMH_HighBP + ID_Education
+ ID_Race_White
,family=binomial(link='logit'),data=train)
summary(model.manual)
exp(cbind("Odds ratio" = coef(model.manual), confint.default(model.manual, level = 0.95)))
coef(lasso.mod,s=bestlambda)
set.seed(1234)
trainobs=sample(seq(1,dim(cont_vars)[1]),round(.75*dim(cont_vars)[1]),replace=FALSE)
train=cont_vars[trainobs,]
test=cont_vars[-trainobs,]
set.seed(1234)
trainobs=sample(seq(1,dim(reduced)[1]),round(.75*dim(reduced)[1]),replace=FALSE)
train=reduced[trainobs,]
test=reduced[-trainobs,]
setwd("F:/SMU/DS6372/Project 2/STATS_6372_Project2/EDA")
medData <- read.csv(file="data_cut.csv", header=TRUE, sep=',', na.strings=c("", "NA"))
minus_cols<-c(1,7:17,22:24,29:34,36:38,41,43,45,47,48,49,51,53,55,57,59,61,63,64,65,66,68,70,72,74,76,78,80:82,84,85,87,88,90:92,95,99,100,104,105,114,122,123,125,126,136:140,143:151,157:161)
medData[,-minus_cols]->medData
# replace all NA values with 0; should we get rid of NAs instead?
medData <- na.omit(medData)
# recode cognitive variable
######
#levels of lgr_eda2$cdx_cog
######
#0=normal*****
#1=Subjective Memory Complaint(SMC)****
#2=MCI****
#3=Dementia****
#4=Other Cognition
#5=Abnormal Cognition****
#7=Dont Know
#8=Refuse to answer
#9=Not Appicable
reduced <- medData %>% mutate(cdx_cog=recode(cdx_cog,
`0`=0,
`1`=1,
`2`=1,
`3`=1,
`4`=1,
`5`=0))
# recode hispanic variable
reduced <- reduced %>% mutate(ID_Hispanic=recode(ID_Hispanic,
`1`=0,
`2`=1,
`3`=1,
`4`=1,
`5`=1))
# test / train data set split 50/50
set.seed(1234)
trainobs=sample(seq(1,dim(reduced)[1]),round(.50*dim(reduced)[1]),replace=FALSE)
train=reduced[trainobs,]
test=reduced[-trainobs,]
train$cdx_cog<-as.numeric(train$cdx_cog)
full.model <- lm(cdx_cog ~., data = train)
summary(full.model)
# stepwise selection - LM
step(lm(cdx_cog ~., data = train),direction="both")
# stepwise recommended model - R2 = 0.5666
model.stepwise <- lm(formula = cdx_cog ~ Age + ID_Race_White + ID_Residence + ID_Education +
ID_Retire + OM_BMI + IMH_HighBP + IMH_HeartDisease + IMH_ThyroidDisease +
TrailsA_sscore + LM2_AB_sscore + mmse_t_w + bw_hemoglobin +
bw_ABlymph + bw_ABmono, data = train)
summary(model.stepwise)
x=model.matrix(cdx_cog~.,train)[,-1]
y=(train$cdx_cog)
xtest<-model.matrix(cdx_cog~.,test)[,-1]
ytest<-test$cdx_cog
grid=10^seq(10,-2, length =608)
lasso.mod=glmnet(x,y,alpha=1, lambda =grid)
par(mfrow=c(1,1))
cv.out=cv.glmnet(x,y,alpha=1) #alpha=1 performs LASSO
plot(cv.out)
bestlambda<-cv.out$lambda.min  #Optimal penalty parameter.  You can make this call visually.
lasso.pred=predict (lasso.mod ,s=bestlambda ,newx=xtest)
coef(lasso.mod,s=bestlambda)
setwd("F:/SMU/DS6372/Project 2/STATS_6372_Project2/EDA")
medData <- read.csv(file="data_cut.csv", header=TRUE, sep=',', na.strings=c("", "NA"))
minus_cols<-c(1,7:17,22:24,29:34,36:38,41,43,45,47,48,49,51,53,55,57,59,61,63,64,65,66,68,70,72,74,76,78,80:82,84,85,87,88,90:92,95,99,100,104,105,114,122,123,125,126,136:140,143:151,157:161)
medData[,-minus_cols]->medData
# replace all NA values with 0; should we get rid of NAs instead?
medData <- na.omit(medData)
# recode cognitive variable
######
#levels of lgr_eda2$cdx_cog
######
#0=normal*****
#1=Subjective Memory Complaint(SMC)****
#2=MCI****
#3=Dementia****
#4=Other Cognition
#5=Abnormal Cognition****
#7=Dont Know
#8=Refuse to answer
#9=Not Appicable
reduced <- medData %>% mutate(cdx_cog=recode(cdx_cog,
`0`=0,
`1`=1,
`2`=1,
`3`=1,
`4`=1,
`5`=0))
# recode hispanic variable
reduced <- reduced %>% mutate(ID_Hispanic=recode(ID_Hispanic,
`1`=0,
`2`=1,
`3`=1,
`4`=1,
`5`=1))
# test / train data set split 50/50
train <- reduced[1:200,]
test <- reduced[201:452,]
# full fit (MLR) before converting response to factor - R2 0.3932
train$cdx_cog<-as.numeric(train$cdx_cog)
full.model <- lm(cdx_cog ~., data = train)
summary(full.model)
# stepwise selection - LM
step(lm(cdx_cog ~., data = train),direction="both")
# stepwise recommended model - R2 = 0.5666
model.stepwise <- lm(formula = cdx_cog ~ Age + ID_Race_White + ID_Residence + ID_Education +
ID_Retire + OM_BMI + IMH_HighBP + IMH_HeartDisease + IMH_ThyroidDisease +
TrailsA_sscore + LM2_AB_sscore + mmse_t_w + bw_hemoglobin +
bw_ABlymph + bw_ABmono, data = train)
summary(model.stepwise)
x=model.matrix(cdx_cog~.,train)[,-1]
y=(train$cdx_cog)
xtest<-model.matrix(cdx_cog~.,test)[,-1]
ytest<-test$cdx_cog
# Plot LASSO model
grid=10^seq(10,-2, length =608)
lasso.mod=glmnet(x,y,alpha=1, lambda =grid)
par(mfrow=c(1,1))
cv.out=cv.glmnet(x,y,alpha=1) #alpha=1 performs LASSO
plot(cv.out)
bestlambda<-cv.out$lambda.min  #Optimal penalty parameter.  You can make this call visually.
lasso.pred=predict (lasso.mod ,s=bestlambda ,newx=xtest)
coef(lasso.mod,s=bestlambda)
train[, 'cdx_cog'] <- as.factor(train[, 'cdx_cog'])
test[, 'cdx_cog'] <- as.factor(test[, 'cdx_cog'])
model.manual <- glm(cdx_cog ~ Age + ID_Gender + ID_USlive + OM_BMI + IMH_Stroke + TrailsA_sscore + LM1_AB_sscore + LM2_AB_sscore
+ mmse_t_w + bw_hemoglobin + + IMH_ThyroidDisease + bw_ABneutro + bw_ABmono + bw_ABlymph + IMH_HighBP + ID_Education
+ ID_Race_White
,family=binomial(link='logit'),data=train)
summary(model.manual)
exp(cbind("Odds ratio" = coef(model.manual), confint.default(model.manual, level = 0.95)))
exp(cbind("Odds ratio" = coef(model.manual), confint.default(model.manual, level = 0.95)))
